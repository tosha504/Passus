@use "../sass/components/_varibles" as v;

.newsletter-ps {
  padding: 30px 15px;
  @media (min-width: map-get(v.$grid-breakpoints, lg)) {
    padding: 60px 0;
  }

  .container {
    border-radius: 12px;
    background-repeat: no-repeat;
    background-size: cover;
    background-position: 30%;
    @media (min-width: map-get(v.$grid-breakpoints, md)) {
      background-position: 100%;
      padding: 40px;
    }
    padding: 20px;
    display: flex;
    flex-wrap: wrap;
    gap: 22px;
    align-items: center;
    color: var(--white);
    @media (min-width: map-get(v.$grid-breakpoints, lg)) {
      padding: 80px;
    }
  }

  &__left,
  &__right {
    flex: 1 1 100%;
    @media (min-width: map-get(v.$grid-breakpoints, lg)) {
      flex: 1 1 calc((100% / 2) - 22px);
    }
  }

  &__left {
    display: flex;
    align-items: center;
    justify-content: center;
    margin: 0 auto;
    @media (max-width: map-get(v.$grid-breakpoints, sm)) {
      max-width: 150px;
    }
  }

  &__right {
    .newsletter-flex {
      display: flex;
      align-items: center;
      margin-bottom: 16px;
      flex-wrap: wrap;
      gap: 10px;

      input {
        background: var(--blur);
        color: var(--white);

        &::placeholder {
          color: var(--white);
        }

        &:focus {
          background: var(--blur);
        }
      }

      input[type="submit"] {
        background-color: var(--primary-theme);
        padding: 14px 24px;
        color: var(--white);
        border: none;
        border-radius: 6px;
        font-size: 16px;
        font-weight: 600;
        @media (max-width: map-get(v.$grid-breakpoints, sm)) {
          width: 100%;
        }
      }
      @media (max-width: map-get(v.$grid-breakpoints, sm)) {
        p {
          width: 100%;
        }
      }
      .wpcf7-spinner {
        display: none;
      }
    }

    .newsletter-descr {
      &,
      a {
        font-size: 12px;
        color: var(--passus-grey);
        line-height: 1.5;
      }
    }

    a {
      text-decoration: underline;
      @media (hover: hover) {
        &:hover {
          color: var(--primary-theme);
        }
      }
    }
  }
}
